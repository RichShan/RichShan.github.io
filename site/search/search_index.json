{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Richard Shan","title":"Home"},{"location":"#richard-shan","text":"","title":"Richard Shan"},{"location":"about/","text":"About Me","title":"About"},{"location":"about/#about-me","text":"","title":"About Me"},{"location":"coding/coding/","text":"Here are some of my coding projects: Macro Maker","title":"Coding"},{"location":"coding/coding/#here-are-some-of-my-coding-projects","text":"","title":"Here are some of my coding projects:"},{"location":"coding/coding/#macro-maker","text":"","title":"Macro Maker"},{"location":"coding/macro/","text":"Macro Maker The Macro project was my final project for Java Data Structures. The goal of the project was to allow the user to record all inputs into a computer, including things such as mouse movements, dragging, mouse clicks, key presses, scrolling, and delays. Those actions should then be stored or logged. The actions can then be replayed exactly as they were recorded.","title":"Macro"},{"location":"coding/macro/#macro-maker","text":"The Macro project was my final project for Java Data Structures. The goal of the project was to allow the user to record all inputs into a computer, including things such as mouse movements, dragging, mouse clicks, key presses, scrolling, and delays. Those actions should then be stored or logged. The actions can then be replayed exactly as they were recorded.","title":"Macro Maker"},{"location":"fab/arcade/","text":"Tiny Arcade Assembly Today, I fully built and assembled the Tiny Arcade kit. The kit consisted of a bunch of small plastic parts which would be assembled together to create a small arcade machine. The acrylic was cut pretty roughly, however, so picking the pieces apart took some time. The largest problem, by far, was that the build had structural integrity issues through much of the assembly process due to only being held together by a single screw and would fall apart whenever it was turned. I solved this problem through having someone else assist me in holding the arcade as I pushed the pieces together. After all the pieces were in, the arcade was a lot more stable. I first added the joystick and input buttons onto the board. I then attached the speaker. Here are all the acrylic pieces laid out before assembly: Next, I assembled the first side of the arcade, along with attaching the battery and the screw. I then put the second side of the arcade machine in, allowing me to fully screw both sides together. This is what the arcade looks like after assembling the rest of the acrylic pieces: Final step: stickers! Adding Games The base arcade came loaded with only 3 games on it. However, the arcade is able to support other games through a micro SD card. The instructions for doing so can be found on the TinyCircuits website here . My regular computer didn't have either an SD card or microSD port so I had to switch to a second computer. After that, I downloaded the other games from the TinyCircuits website . This is what the zip file containing all the games looks like. Within each of these game folders is a bin and a tsv file for that respective game. I then uploaded the contents of the zip file into the micro SD card, which was the D drive under my file system. After ejecting the micro SD card from the computer port, I put it into the port inside the TinyArcade machine. Instead of displaying a screen upon startup with a message notifying the user that there is no SD card inserted, the Arcade now starts up and allows the user to play all the imported games. The Arcade steps through the games in alphabetical order. All the added games are now playable!","title":"Tiny Arcade"},{"location":"fab/arcade/#tiny-arcade","text":"","title":"Tiny Arcade"},{"location":"fab/arcade/#assembly","text":"Today, I fully built and assembled the Tiny Arcade kit. The kit consisted of a bunch of small plastic parts which would be assembled together to create a small arcade machine. The acrylic was cut pretty roughly, however, so picking the pieces apart took some time. The largest problem, by far, was that the build had structural integrity issues through much of the assembly process due to only being held together by a single screw and would fall apart whenever it was turned. I solved this problem through having someone else assist me in holding the arcade as I pushed the pieces together. After all the pieces were in, the arcade was a lot more stable. I first added the joystick and input buttons onto the board. I then attached the speaker. Here are all the acrylic pieces laid out before assembly: Next, I assembled the first side of the arcade, along with attaching the battery and the screw. I then put the second side of the arcade machine in, allowing me to fully screw both sides together. This is what the arcade looks like after assembling the rest of the acrylic pieces: Final step: stickers!","title":"Assembly"},{"location":"fab/arcade/#adding-games","text":"The base arcade came loaded with only 3 games on it. However, the arcade is able to support other games through a micro SD card. The instructions for doing so can be found on the TinyCircuits website here . My regular computer didn't have either an SD card or microSD port so I had to switch to a second computer. After that, I downloaded the other games from the TinyCircuits website . This is what the zip file containing all the games looks like. Within each of these game folders is a bin and a tsv file for that respective game. I then uploaded the contents of the zip file into the micro SD card, which was the D drive under my file system. After ejecting the micro SD card from the computer port, I put it into the port inside the TinyArcade machine. Instead of displaying a screen upon startup with a message notifying the user that there is no SD card inserted, the Arcade now starts up and allows the user to play all the imported games. The Arcade steps through the games in alphabetical order. All the added games are now playable!","title":"Adding Games"},{"location":"fab/cardboardBox/","text":"Cardboard Storage Box Today, I cut and assembled a cardboard box to use for storage in the future. First, I downloaded the provided CDR file out of Google Drive. I then ran the file through the laser cutter and took out the cardboard. This is the box after the cut. I folded in all the parts of the box to ensure that they assembled nicely. Here is the box after I folded it all together and hot glued it:","title":"Cardboard Storage Box"},{"location":"fab/cardboardBox/#cardboard-storage-box","text":"Today, I cut and assembled a cardboard box to use for storage in the future. First, I downloaded the provided CDR file out of Google Drive. I then ran the file through the laser cutter and took out the cardboard. This is the box after the cut. I folded in all the parts of the box to ensure that they assembled nicely. Here is the box after I folded it all together and hot glued it:","title":"Cardboard Storage Box"},{"location":"fab/fab/","text":"Fab Academy Prefab Storage Box Arcade Glasses","title":"Fab Academy"},{"location":"fab/fab/#fab-academy","text":"","title":"Fab Academy"},{"location":"fab/fab/#prefab","text":"","title":"Prefab"},{"location":"fab/fab/#storage-box","text":"","title":"Storage Box "},{"location":"fab/fab/#arcade","text":"","title":"Arcade "},{"location":"fab/fab/#glasses","text":"","title":"Glasses "},{"location":"fab/glasses/","text":"Flashing Glasses I built a pair of glasses that can light up and flash the LEDs based on how much sound is around them. The glasses came in a kit, of which the assembly instructions can be found here . I first soldered on the 1k, 10k, and 2M ohm resistors, respectively. I then soldered on the microphone and started on the LEDs. Here is what the glasses looked like after all the LEDs had been put in place: Next, I installed the 0.1uF 104 capacitor and LED driver. Then, I soldered on the transistor, 10uF electrolytic capacitors, and potentiometer. After adding the switch and battery holders, the board is complete. After putting the board into the plastic frame, this is what the completed glasses look like:","title":"Flashing Glasses"},{"location":"fab/glasses/#flashing-glasses","text":"I built a pair of glasses that can light up and flash the LEDs based on how much sound is around them. The glasses came in a kit, of which the assembly instructions can be found here . I first soldered on the 1k, 10k, and 2M ohm resistors, respectively. I then soldered on the microphone and started on the LEDs. Here is what the glasses looked like after all the LEDs had been put in place: Next, I installed the 0.1uF 104 capacitor and LED driver. Then, I soldered on the transistor, 10uF electrolytic capacitors, and potentiometer. After adding the switch and battery holders, the board is complete. After putting the board into the plastic frame, this is what the completed glasses look like:","title":"Flashing Glasses"}]}